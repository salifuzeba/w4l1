name: Build and Push Docker Image to ECR Private

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Verify Docker and AWS CLI
      run: |
        which docker
        docker --version
        which aws
        aws --version

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Create ECR private repo if not exists
      run: |
        aws ecr describe-repositories \
          --region ${{ secrets.AWS_REGION }} \
          --repository-names ${{ secrets.ECR_REPO_NAME }} || \
        aws ecr create-repository \
          --repository-name ${{ secrets.ECR_REPO_NAME }} \
          --region ${{ secrets.AWS_REGION }}

    - name: Debug ECR registry values
      run: |
        echo "Account ID: ${{ secrets.AWS_ACCOUNT_ID }}"
        echo "Region: ${{ secrets.AWS_REGION }}"
        echo "ECR URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"


    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
        docker login --username AWS \
        --password-stdin "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"

    - name: Build Docker image
      run: |
        IMAGE_TAG="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_NAME }}"
        docker build -t "$IMAGE_TAG" .
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Push Docker image to Amazon ECR
      run: |
        docker push "$IMAGE_TAG"
      env:
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
